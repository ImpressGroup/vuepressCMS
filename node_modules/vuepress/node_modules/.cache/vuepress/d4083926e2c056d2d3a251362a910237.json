{"remainingRequest":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js??ref--3-1!/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/Page.vue?vue&type=script&lang=js","dependencies":[{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/Page.vue","mtime":1543890070546},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/cache-loader/dist/cjs.js","mtime":1543377948178},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js","mtime":1543890070561},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js","mtime":1543890073228}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  props: ['sidebarItems'],\n  computed: {\n    lastUpdated: function lastUpdated() {\n      if (this.$page.lastUpdated) {\n        return new Date(this.$page.lastUpdated).toLocaleString(this.$lang);\n      }\n    },\n    lastUpdatedText: function lastUpdatedText() {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated;\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated;\n      }\n      return 'Last Updated';\n    },\n    prev: function prev() {\n      var prev = this.$page.frontmatter.prev;\n      if (prev === false) {\n        return;\n      } else if (prev) {\n        return (0, _util.resolvePage)(this.$site.pages, prev, this.$route.path);\n      } else {\n        return resolvePrev(this.$page, this.sidebarItems);\n      }\n    },\n    next: function next() {\n      var next = this.$page.frontmatter.next;\n      if (next === false) {\n        return;\n      } else if (next) {\n        return (0, _util.resolvePage)(this.$site.pages, next, this.$route.path);\n      } else {\n        return resolveNext(this.$page, this.sidebarItems);\n      }\n    },\n    editLink: function editLink() {\n      if (this.$page.frontmatter.editLink === false) {\n        return;\n      }\n      var _$site$themeConfig = this.$site.themeConfig,\n          repo = _$site$themeConfig.repo,\n          editLinks = _$site$themeConfig.editLinks,\n          _$site$themeConfig$do = _$site$themeConfig.docsDir,\n          docsDir = _$site$themeConfig$do === undefined ? '' : _$site$themeConfig$do,\n          _$site$themeConfig$do2 = _$site$themeConfig.docsBranch,\n          docsBranch = _$site$themeConfig$do2 === undefined ? 'master' : _$site$themeConfig$do2,\n          _$site$themeConfig$do3 = _$site$themeConfig.docsRepo,\n          docsRepo = _$site$themeConfig$do3 === undefined ? repo : _$site$themeConfig$do3;\n\n\n      var path = (0, _util.normalize)(this.$page.path);\n      if (_util.endingSlashRE.test(path)) {\n        path += 'README.md';\n      } else {\n        path += '.md';\n      }\n\n      if (docsRepo && editLinks) {\n        var base = _util.outboundRE.test(docsRepo) ? docsRepo : 'https://github.com/' + docsRepo;\n        return base.replace(_util.endingSlashRE, '') + ('/edit/' + docsBranch) + (docsDir ? '/' + docsDir.replace(_util.endingSlashRE, '') : '') + path;\n      }\n    },\n    editLinkText: function editLinkText() {\n      return this.$themeLocaleConfig.editLinkText || this.$site.themeConfig.editLinkText || 'Edit this page';\n    }\n  }\n}; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nfunction resolvePrev(page, items) {\n  return find(page, items, -1);\n}\n\nfunction resolveNext(page, items) {\n  return find(page, items, 1);\n}\n\nfunction find(page, items, offset) {\n  var res = [];\n  items.forEach(function (item) {\n    if (item.type === 'group') {\n      res.push.apply(res, (0, _toConsumableArray3.default)(item.children || []));\n    } else {\n      res.push(item);\n    }\n  });\n  for (var i = 0; i < res.length; i++) {\n    var cur = res[i];\n    if (cur.type === 'page' && cur.path === page.path) {\n      return res[i + offset];\n    }\n  }\n}",null]}