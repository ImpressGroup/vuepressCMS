{"remainingRequest":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js??ref--3-1!/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/Sidebar.vue?vue&type=script&lang=js","dependencies":[{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/Sidebar.vue","mtime":1543890070546},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/cache-loader/dist/cjs.js","mtime":1543377948178},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js","mtime":1543890070561},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js","mtime":1543890073228}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SidebarGroup = require('./SidebarGroup.vue');\n\nvar _SidebarGroup2 = _interopRequireDefault(_SidebarGroup);\n\nvar _SidebarLink = require('./SidebarLink.vue');\n\nvar _SidebarLink2 = _interopRequireDefault(_SidebarLink);\n\nvar _NavLinks = require('./NavLinks.vue');\n\nvar _NavLinks2 = _interopRequireDefault(_NavLinks);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexports.default = {\n  components: { SidebarGroup: _SidebarGroup2.default, SidebarLink: _SidebarLink2.default, NavLinks: _NavLinks2.default },\n  props: ['items'],\n  data: function data() {\n    return {\n      openGroupIndex: 0\n    };\n  },\n  created: function created() {\n    this.refreshIndex();\n  },\n\n  watch: {\n    '$route': function $route() {\n      this.refreshIndex();\n    }\n  },\n  methods: {\n    refreshIndex: function refreshIndex() {\n      var index = resolveOpenGroupIndex(this.$route, this.items);\n      if (index > -1) {\n        this.openGroupIndex = index;\n      }\n    },\n    toggleGroup: function toggleGroup(index) {\n      this.openGroupIndex = index === this.openGroupIndex ? -1 : index;\n    },\n    isActive: function isActive(page) {\n      return (0, _util.isActive)(this.$route, page.path);\n    }\n  }\n};\n\n\nfunction resolveOpenGroupIndex(route, items) {\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    if (item.type === 'group' && item.children.some(function (c) {\n      return (0, _util.isActive)(route, c.path);\n    })) {\n      return i;\n    }\n  }\n  return -1;\n}",null]}