{"remainingRequest":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js??ref--3-1!/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/NavLinks.vue?vue&type=script&lang=js","dependencies":[{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vuepress/lib/default-theme/NavLinks.vue","mtime":1543890070546},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/cache-loader/dist/cjs.js","mtime":1543377948178},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/babel-loader/lib/index.js","mtime":1543890070561},{"path":"/var/www/html/git/vuepress-netlify-cms/node_modules/vue-loader/lib/index.js","mtime":1543890073228}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _DropdownLink = require('./DropdownLink.vue');\n\nvar _DropdownLink2 = _interopRequireDefault(_DropdownLink);\n\nvar _util = require('./util');\n\nvar _NavLink = require('./NavLink.vue');\n\nvar _NavLink2 = _interopRequireDefault(_NavLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: { NavLink: _NavLink2.default, DropdownLink: _DropdownLink2.default },\n  computed: {\n    userNav: function userNav() {\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || [];\n    },\n    nav: function nav() {\n      var _this = this;\n\n      var locales = this.$site.locales;\n\n      if (locales && (0, _keys2.default)(locales).length > 1) {\n        var currentLink = this.$page.path;\n        var routes = this.$router.options.routes;\n        var themeLocales = this.$site.themeConfig.locales || {};\n        var languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          items: (0, _keys2.default)(locales).map(function (path) {\n            var locale = locales[path];\n            var text = themeLocales[path] && themeLocales[path].label || locale.lang;\n            var link = void 0;\n            // Stay on the current page\n            if (locale.lang === _this.$lang) {\n              link = currentLink;\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(_this.$localeConfig.path, path);\n              // fallback to homepage\n              if (!routes.some(function (route) {\n                return route.path === link;\n              })) {\n                link = path;\n              }\n            }\n            return { text: text, link: link };\n          })\n        };\n        return [].concat((0, _toConsumableArray3.default)(this.userNav), [languageDropdown]);\n      }\n      return this.userNav;\n    },\n    userLinks: function userLinks() {\n      return (this.nav || []).map(function (link) {\n        return (0, _assign2.default)((0, _util.resolveNavLinkItem)(link), {\n          items: (link.items || []).map(_util.resolveNavLinkItem)\n        });\n      });\n    },\n    repoLink: function repoLink() {\n      var repo = this.$site.themeConfig.repo;\n\n      if (repo) {\n        return (/^https?:/.test(repo) ? repo : 'https://github.com/' + repo\n        );\n      }\n    },\n    repoLabel: function repoLabel() {\n      if (!this.repoLink) return;\n      if (this.$site.themeConfig.repoLabel) {\n        return this.$site.themeConfig.repoLabel;\n      }\n\n      var repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0];\n      var platforms = ['GitHub', 'GitLab', 'Bitbucket'];\n      for (var i = 0; i < platforms.length; i++) {\n        var platform = platforms[i];\n        if (new RegExp(platform, 'i').test(repoHost)) {\n          return platform;\n        }\n      }\n\n      return 'Source';\n    }\n  }\n}; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//",null]}